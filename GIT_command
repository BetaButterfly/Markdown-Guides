#  | Команда | Опис |
|---------|------|
| `git init` | Створює новий Git репозиторій в поточній папці |
| `git clone https://github....` | Копіює репозиторій з вказаної адреси |
| `git add .` | Додає всі змінені файли до індексу для коміту |
| `git rm --cached` | Прибирає файли зі стеження, але залишає їх в папці |
| `git checkout .` | Скасовує всі незакомічені зміни |
| `git commit -m "назва коміту"` | Створює новий коміт зі змінами в індексі |
| `git log` | Показує історію комітів |
| `git log --pretty=oneline` | Показує історію комітів коротко, по одному рядку |
| `git status` | Показує стан файлів в репозиторії |
| `git diff` | Показує незакомічені зміни |
| `git show` | Показує інформацію про останній коміт |
| `git show abc123` | Показує інформацію про коміт з ID abc123 |
| `git show abc123:path/to/file.txt` | Показує стан файлу в коміті abc123 |
| `git checkout abc123` | Переходить на коміт abc123 |
| `git pull` | Отримує зміни з віддаленого репозиторію |
| `git push` | Надсилає локальні зміни на віддалений репозиторій |
| `git branch` | Показує список локальних гілок |
| `git branch -a` | Показує всі гілки, включаючи віддалені |
| `git branch -avv` | Показує всі гілки з додатковою інформацією |
| `git branch second` | Створює нову гілку "second" |
| `git branch -m second two` | Перейменовує гілку "second" на "two" |
| `git checkout second` | Переходить на гілку "second" |
| `git checkout -` | Повертається на попередню гілку |
| `git checkout -b second` | Створює і переходить на нову гілку "second" |
| `git push -u origin second` | Надсилає гілку "second" на віддалений репозиторій |
| `git branch -D second` | Видаляє локальну гілку "second" |
| `git push origin -d second` | Видаляє віддалену гілку "second" |
| `git merge second` | Об'єднує гілку "second" з поточною |
| `git help` | Показує довідку Git |
| `history` | Показує історію використаних команд |
| `git config` | Налаштовує параметри Git |
| `git config --list` | Показує поточні налаштування Git |
| `git rebase -i --root` | Дозволяє змінювати історію комітів |
| `git rebase --abort` | Скасовує процес rebase |
| `git push --force-with-lease` | Примусово оновлює віддалений репозиторій |
| `git stash` | Тимчасово зберігає незакомічені зміни |
| `git stash list` | Показує список збережених змін |
| `git stash pop` | Відновлює останні збережені зміни |
| `git cherry-pick 64134c1` | Застосовує вказаний коміт до поточної гілки |
| `git config --get-regexp alias` | Показує налаштовані псевдоніми |
| `echo "test.html" >> .gitignore` | Додає файл до .gitignore |
| `sed -i '/test.html/d' .gitignore` | Видаляє файл з .gitignore |

